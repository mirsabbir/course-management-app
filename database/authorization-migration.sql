CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE TABLE "AspNetRoles" (
        "Id" text NOT NULL,
        "Name" character varying(256),
        "NormalizedName" character varying(256),
        "ConcurrencyStamp" text,
        CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE TABLE "Invitations" (
        "Id" uuid NOT NULL,
        "Email" character varying(255) NOT NULL,
        "FullName" text NOT NULL,
        "Token" character varying(256) NOT NULL,
        "ExpirationDate" timestamp with time zone NOT NULL,
        CONSTRAINT "PK_Invitations" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE TABLE "Users" (
        "Id" text NOT NULL,
        "FullName" character varying(100) NOT NULL,
        "DateOfBirth" timestamp with time zone NOT NULL,
        "UserName" character varying(256),
        "NormalizedUserName" character varying(256),
        "Email" character varying(256),
        "NormalizedEmail" character varying(256),
        "EmailConfirmed" boolean NOT NULL,
        "PasswordHash" text,
        "SecurityStamp" text,
        "ConcurrencyStamp" text,
        "PhoneNumber" text,
        "PhoneNumberConfirmed" boolean NOT NULL,
        "TwoFactorEnabled" boolean NOT NULL,
        "LockoutEnd" timestamp with time zone,
        "LockoutEnabled" boolean NOT NULL,
        "AccessFailedCount" integer NOT NULL,
        CONSTRAINT "PK_Users" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE TABLE "AspNetRoleClaims" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "RoleId" text NOT NULL,
        "ClaimType" text,
        "ClaimValue" text,
        CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE TABLE "AspNetUserClaims" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "UserId" text NOT NULL,
        "ClaimType" text,
        "ClaimValue" text,
        CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_AspNetUserClaims_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE TABLE "AspNetUserLogins" (
        "LoginProvider" text NOT NULL,
        "ProviderKey" text NOT NULL,
        "ProviderDisplayName" text,
        "UserId" text NOT NULL,
        CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
        CONSTRAINT "FK_AspNetUserLogins_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE TABLE "AspNetUserRoles" (
        "UserId" text NOT NULL,
        "RoleId" text NOT NULL,
        CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
        CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
        CONSTRAINT "FK_AspNetUserRoles_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE TABLE "AspNetUserTokens" (
        "UserId" text NOT NULL,
        "LoginProvider" text NOT NULL,
        "Name" text NOT NULL,
        "Value" text,
        CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
        CONSTRAINT "FK_AspNetUserTokens_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
    VALUES ('426df999-5b23-4fe1-807b-4730a91bf85c', NULL, 'Student', 'STUDENT');
    INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
    VALUES ('8c17cdd1-aaaa-4ffc-9931-619bb6760b8b', NULL, 'Staff', 'STAFF');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    INSERT INTO "Users" ("Id", "AccessFailedCount", "ConcurrencyStamp", "DateOfBirth", "Email", "EmailConfirmed", "FullName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
    VALUES ('2e17f50a-9541-4731-951f-a6755db80eeb', 0, 'adcsdcsdc25d1fv5fd', TIMESTAMPTZ '1995-02-01T18:00:00Z', 'olivier@example.com', TRUE, 'Olivier Lefebvre', FALSE, NULL, 'OLIVIER@EXAMPLE.COM', 'OLIVIER@EXAMPLE.COM', 'AQAAAAIAAYagAAAAELr4vn3sYT19MRAC6PLUCFsUlE3dwda1bvoZkZ5V77adz4c6yC/aP474PPeHx6UXnw==', NULL, FALSE, 'bhdbcvhdbchdbhjkbs15c1sdf51', FALSE, 'olivier@example.com');
    INSERT INTO "Users" ("Id", "AccessFailedCount", "ConcurrencyStamp", "DateOfBirth", "Email", "EmailConfirmed", "FullName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
    VALUES ('3e3c9543-d97c-4332-b177-850073f90d01', 0, 'adcsdcsdc25d1fv5fd', TIMESTAMPTZ '1995-02-01T18:00:00Z', 'mahamud@example.com', TRUE, 'Mahamud Shahjahan', FALSE, NULL, 'MAHAMUD@EXAMPLE.COM', 'MAHAMUD@EXAMPLE.COM', 'AQAAAAIAAYagAAAAELr4vn3sYT19MRAC6PLUCFsUlE3dwda1bvoZkZ5V77adz4c6yC/aP474PPeHx6UXnw==', NULL, FALSE, 'bhdbcvhdbchdbhjkbs15c1sdf51', FALSE, 'mahamud@example.com');
    INSERT INTO "Users" ("Id", "AccessFailedCount", "ConcurrencyStamp", "DateOfBirth", "Email", "EmailConfirmed", "FullName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
    VALUES ('833420e4-2b6c-4db4-9a5e-14b52f38133d', 0, 'adcsdcsdc25d1fv5fd', TIMESTAMPTZ '1995-02-01T18:00:00Z', 'mirsabbiralam@gmail.com', TRUE, 'Mir Sabbir', FALSE, NULL, 'MIRSABBIRALAM@GMAIL.COM', 'MIRSABBIRALAM@GMAIL.COM', 'AQAAAAIAAYagAAAAELr4vn3sYT19MRAC6PLUCFsUlE3dwda1bvoZkZ5V77adz4c6yC/aP474PPeHx6UXnw==', NULL, FALSE, 'bhdbcvhdbchdbhjkbs15c1sdf51', FALSE, 'mirsabbiralam@gmail.com');
    INSERT INTO "Users" ("Id", "AccessFailedCount", "ConcurrencyStamp", "DateOfBirth", "Email", "EmailConfirmed", "FullName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName")
    VALUES ('de454825-5ab5-429b-b573-f39342ee72c1', 0, 'adcsdcsdc25d1fv5fd', TIMESTAMPTZ '1995-02-01T18:00:00Z', 'andrew@example.com', TRUE, 'Andrew Crawley', FALSE, NULL, 'ANDREW@EXAMPLE.COM', 'ANDREW@EXAMPLE.COM', 'AQAAAAIAAYagAAAAELr4vn3sYT19MRAC6PLUCFsUlE3dwda1bvoZkZ5V77adz4c6yC/aP474PPeHx6UXnw==', NULL, FALSE, 'bhdbcvhdbchdbhjkbs15c1sdf51', FALSE, 'andrew@example.com');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
    VALUES ('8c17cdd1-aaaa-4ffc-9931-619bb6760b8b', '2e17f50a-9541-4731-951f-a6755db80eeb');
    INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
    VALUES ('8c17cdd1-aaaa-4ffc-9931-619bb6760b8b', '3e3c9543-d97c-4332-b177-850073f90d01');
    INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
    VALUES ('8c17cdd1-aaaa-4ffc-9931-619bb6760b8b', '833420e4-2b6c-4db4-9a5e-14b52f38133d');
    INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
    VALUES ('8c17cdd1-aaaa-4ffc-9931-619bb6760b8b', 'de454825-5ab5-429b-b573-f39342ee72c1');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE UNIQUE INDEX "IX_Invitations_Email" ON "Invitations" ("Email");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE UNIQUE INDEX "IX_Invitations_Token" ON "Invitations" ("Token");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE INDEX "EmailIndex" ON "Users" ("NormalizedEmail");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE UNIQUE INDEX "IX_Users_Email" ON "Users" ("Email");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE UNIQUE INDEX "IX_Users_UserName" ON "Users" ("UserName");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    CREATE UNIQUE INDEX "UserNameIndex" ON "Users" ("NormalizedUserName");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250302012635_init_migration') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250302012635_init_migration', '9.0.2');
    END IF;
END $EF$;
COMMIT;

